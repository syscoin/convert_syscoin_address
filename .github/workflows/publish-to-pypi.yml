name: Publish Python Package

on:
  push:
    branches:
      - main # Or your default branch
  release:
    types: [published] # Trigger on GitHub release publication

permissions:
  contents: read
  id-token: write # Needed for trusted publishing

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a version compatible with requires-python

    - name: Install build dependencies
      run: python -m pip install build

    - name: Build package
      run: python -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Publish to TestPyPI on pushes to main

    environment:
      name: testpypi
      url: https://test.pypi.org/p/syscoin-address-converter # Optional: link to TestPyPI project

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        # Use trusted publishing (recommended)
        # Requires configuring trusted publishers in TestPyPI project settings
        # https://docs.pypi.org/trusted-publishers/
        # Alternatively, use a token:
        # password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published' # Publish to PyPI on release

    environment:
      name: pypi
      url: https://pypi.org/p/syscoin-address-converter # Optional: link to PyPI project

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # Use trusted publishing (recommended)
      # Requires configuring trusted publishers in PyPI project settings
      # https://docs.pypi.org/trusted-publishers/
      # Alternatively, use a token:
      # with:
      #   password: ${{ secrets.PYPI_API_TOKEN }} 