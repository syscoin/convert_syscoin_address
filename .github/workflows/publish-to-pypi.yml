name: Publish Python Package

on:
  push:
    branches:
      - main # Or your default branch
  release:
    types: [published] # Trigger on GitHub release publication

permissions:
  contents: read
  # id-token: write # Not needed when using API tokens

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install PEP 517 build dependencies
      run: >-
        python -m
        pip install --upgrade pip setuptools wheel

    - name: Install build backend dependencies
      run: python -m pip install build

    - name: Build package
      run: python -m build

    - name: List contents of dist/
      run: ls -l dist/

    # Inspect the METADATA file within the generated wheel
    - name: Inspect Wheel Metadata
      run: |
        WHEEL_FILE=$(find dist/ -name '*.whl')
        echo "--- METADATA from $WHEEL_FILE ---"
        unzip -p "$WHEEL_FILE" "*.dist-info/METADATA" || echo "METADATA file not found in wheel"
        echo "-----------------------------------"

    # Inspect the PKG-INFO file within the generated sdist (tar.gz)
    - name: Inspect Sdist PKG-INFO
      run: |
        SDIST_FILE=$(find dist/ -name '*.tar.gz')
        echo "--- PKG-INFO from $SDIST_FILE ---"
        # Extract only the PKG-INFO file to stdout
        tar -xOzf "$SDIST_FILE" "*/PKG-INFO" 2>/dev/null || echo "PKG-INFO file not found in sdist"
        echo "----------------------------------"

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment:
      name: testpypi
      url: https://test.pypi.org/p/syscoin-address-converter

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Install twine
      run: python -m pip install twine

    - name: Publish distribution to TestPyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    environment:
      name: pypi
      url: https://pypi.org/p/syscoin-address-converter

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Install twine
      run: python -m pip install twine

    - name: Publish distribution to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: python -m twine upload dist/* 